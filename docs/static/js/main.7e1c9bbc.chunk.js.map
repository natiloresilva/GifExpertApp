{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAExC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BT,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,MAOlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SArBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAACpB,IAEGqB,EDZwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACR,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfpBgB,EAAe,WAIxB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOD,EAAP,KAAmBD,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBAEA,oCAEQA,QAFR,IAEQA,OAFR,EAEQA,EAAYuB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCrBjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7e1c9bbc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport propTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories, categories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n       \n        if(inputValue.trim().length > 2){\n            //Si no mandaba las categories por props también podría haber hecho ===> setCategories( cates => [...cates, 'HunterXHunter'])\n            setCategories([inputValue, ...categories])\n            setInputValue('')\n        }\n        \n       \n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n       </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: propTypes.func.isRequired\n}\n","export  const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${(encodeURI(category))}&limit=10&api_key=kxYLBOs2vWLkilzkCoEmjHT528rnwOJC`\n    const resp = await fetch(url)\n    const {data} = await resp.json()\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n           <img src={url} alt={title} />\n           <p>{title}</p> \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport {GifGridItem} from '../components/GifGridItem'\n\n\nexport const GifGrid = ({category}) => {\n\n    //Renombramos Data en la desestructuración\n    const {data:images, loading} = useFetchGifs(category)\n\n    return (\n        <>\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n\n        {loading && <p className='animate__animated animate__flash'>Loading ...</p>}\n            <div className='card-grid'>\n               {\n                images.map(img => (\n                    <GifGridItem \n                        key={img.id}\n                        {...img}\n                    />\n                ))\n                }\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                    setstate({\n                        data: imgs,\n                        loading: false\n                    })\n            })\n    }, [category])\n\n    return state\n\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\n    // // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\n    \n    const [categories, setCategories] = useState(['One Punch'])\n\n    // const handleAdd = () => {\n    //     setCategories([...categories, 'HunterXHunter'])\n    //     //También podemos utilizar un callback en el que recibe como argumento el estado anterior y devuelve un nuevo estado\n    //     //setCategories( cates => [...cates, 'HunterXHunter']) }\n\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} categories={categories}/>\n            <hr />\n\n            <ol>\n                {\n                    categories?.map(category => (\n                        <GifGrid\n                            key={category} \n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}